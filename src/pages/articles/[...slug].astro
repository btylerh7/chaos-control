---
import SiteLayout from '../../layouts/SiteLayout.astro';

import {getEntry} from 'astro:content';
import { formatDate } from '../../utils';
import { db } from 'astro:db';
import { Reactions } from 'astro:db';
import { eq } from 'astro:db';

const {slug} = Astro.params;
if(slug === undefined) {
	throw new Error('Slug is required')
}
const entry = await getEntry('blog', slug);
if (entry == undefined) {
	return Astro.redirect('/404');
}
const { Content } = await entry.render();

const reactions = await db
.select({
	emoji: Reactions.emoji,
	count: Reactions.count
})
.from(Reactions)
.where(eq(Reactions.postSlug, slug))
const showLike = reactions.length == 0;


---

<SiteLayout>
	<h1>{entry.data.title}</h1>
	<section class="metadata">
		<p class="author">By {entry.data.author}</p>
		<p class="date">Published on {formatDate(entry.data.publishDate)}
	</section>
	<Content />
	<section class="reactions">
		<h2>Reactions</h2>
		{reactions.map(reaction => (
		<button 
			class="reactButton"  
			data-reaction={reaction.emoji}
			data-count={reaction.count} 
			data-slug={slug}
		>{reaction.emoji} {reaction.count}</button>
		))}
		{ showLike && <button class="reactButton" data-reaction={'👍'} data-count=0 data-slug={slug}>Like</button> }
	</section>
	<script>
	import { actions } from 'astro:actions';
	async function react(slug: string, emoji: string, count: number) {
		console.log(emoji, count)
		const result = await actions.emojiReact({postSlug: slug, emoji, startingCount: count})
		return result.data?.[0].count ?? undefined

	}
	document.querySelectorAll('.reactButton').forEach(button => {
		button.addEventListener('click', async (e) => {
			console.log('button clicked')
			const reaction = button.getAttribute('data-reaction');
			const count = Number(button.getAttribute('data-count'));
			const slug = button.getAttribute('data-slug');
			console.log(reaction, count, slug)
			const result = await react(slug!, reaction!, count!)
			console.log(result)
			if (result) {
				button.setAttribute('data-count', result.toString())
				button.innerHTML = `${reaction} ${result}`
			}
		})
	})


	</script>
</SiteLayout>


<style>
h1 {
	font-weight: 900;
	font-size: 2.5em;
	margin-bottom: 0.25rem;
}
.metadata {
	display: flex;
	gap: 1rem;
	justify-content: flex-start;
	align-items: flex-start;
	font-size: 0.8em;

	& p {
		margin-top: 0;
	}
}

</style>
